schema {
  query: Query
  mutation: Mutation
}

interface Petition {
  PK: ID!
  createdAt: AWSDateTime!
  owner: ID!
  signatureSummary: SignatureSummary
  status: PetitionStatus!
  type: PetitionType!
}

type AddressData @aws_cognito_user_pools @aws_iam {
  address: String!
  city: String
  number: String
  state: String!
  zipCode: String
}

type CandidatePetition implements Petition @aws_cognito_user_pools @aws_iam {
  PK: ID!
  address: AddressData!
  createdAt: AWSDateTime!
  name: String!
  office: ID!
  owner: ID!
  party: ID!
  signatureSummary: SignatureSummary
  status: PetitionStatus!
  type: PetitionType!
}

type IssuePetition implements Petition @aws_cognito_user_pools @aws_iam {
  PK: ID!
  createdAt: AWSDateTime!
  detail: String!
  owner: ID!
  signatureSummary: SignatureSummary
  status: PetitionStatus!
  title: String!
  type: PetitionType!
}

type Mutation {
  submitCandidatePetition(data: CandidatePetitionInput!): CandidatePetition!
    @aws_cognito_user_pools(cognito_groups: ["PetitionerGroup"])
  submitIssuePetition(data: IssuePetitionInput!): IssuePetition!
    @aws_cognito_user_pools(cognito_groups: ["PetitionerGroup"])
}

type Query {
  publicEcho(ping: String!): String!
}

type SignatureSummary @aws_cognito_user_pools @aws_iam {
  approved: Int!
  deadline: AWSDateTime
  required: Int!
  submitted: Int!
    @aws_cognito_user_pools(cognito_groups: ["AdminGroup", "CityStaffGroup"])
}

enum PetitionStatus {
  ACTIVE
  CANCELED
  NEW
  QUALIFIED
  REJECTED
  WITHDRAWN
}

enum PetitionType {
  CANDIDATE
  ISSUE
}

input AddressInput {
  address: String!
  city: String
  number: String
  state: String!
  zipCode: String
}

input CandidatePetitionInput {
  address: AddressInput!
  name: String!
  office: ID!
  party: ID!
}

input IssuePetitionInput {
  detail: String!
  title: String!
}
